function[W]=lda(X,Xclases)  n = columns(X); #El número de columnas equivale al número de muestras  row = rows(X); #Número de dimensiones  #Calculamos el vector media  m = sum(X,2) / n;  Sb = zeros(row,row);  Sw = zeros(row,row);  #Para cada clase  for clase = unique(Xclases)    #obtengo los indices de la clase    indices = find(Xclases == clase);    nclase = columns(indices); #número de muestras de la clase c    #calculo la media para cada clase    mediaclase = sum(X(:,indices),2) /nclase;    #calculo Sb    Sb += nclase*(mediaclase-m)*(mediaclase-m)';    #calculo la matriz de covarianzas...    matriz_covarianzas = 1/nclase*(X(:,indices)-mediaclase)*(X(:,indices)-mediaclase)' ;    #calculamos Sw    Sw+= matriz_covarianzas;  endfor  #calculamos los vectores propios generalizados. Devolvemos los vectores ordenados por valor propio descendente    [V, lambda] = eig(Sb,Sw);    [values,vindicesordenacion] = sort(diag(lambda), "descend"); # diag me permite obtener el vector diagonal  para ordenar    W=V(:,vindicesordenacion);endfunction